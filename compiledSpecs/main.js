// Generated by CoffeeScript 1.6.3
require.config({
  paths: {
    angular: 'vendor/angular/angular'
  },
  baseUrl: '/javascripts',
  shim: {
    'angular': {
      'exports': 'angular'
    }
  },
  priority: ['angular']
});

require({
  urlArgs: "b=" + ((new Date()).getTime()),
  paths: {
    jquery: 'vendor/jquery/jquery'
  }
}, ['angular', 'templates', 'app/mobile-check', 'app/app', 'app/s3'], function(angular, templates, mobilecheck, app) {
  $(document).ready(function() {
    console.log('Initializing metronic');
    Metronic.init();
  });
  return require(['app/login/services', 'app/login/controllers', 'app/course/services', 'app/course/controllers', 'app/course/roster/services', 'app/course/section/services', 'app/course/section/controllers', 'app/course/syllabus/controllers', 'app/course/syllabus/services', 'app/course/lesson/services', 'app/course/lesson/controllers', 'app/course/assignment/services', 'app/course/team/services'], function() {
    var bucket, createRoute, getAllData, getTemplate, isMobile, recursiveResourceFinder, recursiveRouteBuilder, routeMap;
    isMobile = mobilecheck.isMobile();
    bucket = new AWS.S3({
      params: {
        Bucket: 'archangel'
      }
    });
    bucket.listObjects(function(err, data) {
      return console.log("S3 Results: ", err, " ", data);
    });
    getAllData = function(service, $scope, resource) {
      return service.all(resource).getList().then(function(items) {
        return $scope[resource] = items;
      });
    };
    getTemplate = function(name) {
      var template;
      template = templates[name];
      if (isMobile && templates.hasOwnProperty("" + name + "_mobile")) {
        template = templates["" + name + "_mobile"];
      }
      return template;
    };
    routeMap = {
      login: {
        template: 'login',
        controller: 'LoginController'
      },
      course: {
        restful: true,
        template: 'course',
        nested: {
          section: {
            restful: true,
            template: 'course',
            controller: 'CourseController'
          },
          lesson: {
            restful: true,
            template: 'lesson'
          },
          syllabus: {
            restful: true,
            template: 'syllabus'
          },
          cForum: {
            restful: true,
            template: 'cForum',
            controller: 'CourseController'
          }
        }
      }
    };
    recursiveResourceFinder = function(parent, resource) {
      var item, nested, options;
      for (item in parent) {
        options = parent[item];
        if (item.indexOf(resource) === 0 && resource.indexOf(item) === 0) {
          return {
            resource: item,
            options: options
          };
        } else if (options.nested != null) {
          nested = recursiveResourceFinder(options.nested, resource);
          if (nested) {
            return nested;
          }
        }
      }
      return null;
    };
    createRoute = function($routeProvider, route, name, data) {
      console.log("Building routes for " + name + ": " + route);
      return $routeProvider.when(route, {
        template: function($routeParams) {
          var locationParts, options, resource, _ref;
          resource = "";
          locationParts = window.location.pathname.split('/');
          if (locationParts.length > 3) {
            resource = locationParts.slice(-3, -2) + "";
            $routeParams.parentResource = locationParts.slice(1, 2) + "";
          } else {
            resource = locationParts.slice(-1) + "";
          }
          $routeParams.resource = resource;
          if (resource) {
            options = routeMap[resource] || ((_ref = recursiveResourceFinder(routeMap, resource)) != null ? _ref.options : void 0);
            return getTemplate(!options.restful ? options.template : "" + $routeParams.action + "-" + options.template);
          }
        },
        controller: data.controller ? data.controller : "" + (name[0].toUpperCase()) + name.slice(1) + "Controller"
      });
    };
    recursiveRouteBuilder = function($routeProvider, routes, baseURL) {
      var data, name, route, _results;
      _results = [];
      for (name in routes) {
        data = routes[name];
        route = baseURL + ("/" + name);
        if (data.restful) {
          route += "/:action/:id";
        }
        createRoute($routeProvider, route, name, data);
        if (data.nested != null) {
          _results.push(recursiveRouteBuilder($routeProvider, data.nested, "/" + name + "/:parentAction/:parentId"));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    app.config(function($routeProvider, $locationProvider) {
      recursiveRouteBuilder($routeProvider, routeMap, "");
      $routeProvider.otherwise({
        template: getTemplate('main-screen'),
        controller: 'ArchangelController'
      });
      return $locationProvider.html5Mode(true);
    });
    angular.module('djangoApp.controllers').controller('NavbarController', function($scope, $location, $localStorage, Restangular, BASE_URL, User, Course) {
      $scope.$storage = $localStorage.$default({
        useLocalData: true
      });
      $scope.isMobile = isMobile;
      $scope.user = User;
      Course.all().then(function(courses) {
        return $scope.courses = courses;
      });
      return $scope.updateDataURL = function() {
        var url;
        $scope.$storage.useLocalData = !$scope.$storage.useLocalData;
        url = 'http://localhost:8000';
        if (!$scope.$storage.useLocalData) {
          url = 'http://django-archangel.rhcloud.com';
        }
        Restangular.setBaseUrl("" + url + "/");
        return $location.path('/');
      };
    }).controller('SidebarController', function($scope, $location, $routeParams, Restangular, User, Course) {
      $scope.isMobile = isMobile;
      $scope.user = User;
      $scope.routeParams = $routeParams;
      if (User.authenticated) {
        Course.all().then(function(courses) {
          var course, _i, _len, _ref, _results,
            _this = this;
          $scope.courses = courses;
          _ref = $scope.courses;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            course = _ref[_i];
            _results.push(Course.upcomingAssignments(course.id).then(function(upcoming) {
              return course.upcoming = upcoming;
            }));
          }
          return _results;
        });
        $scope.moment = moment;
        if (!isMobile) {
          return getAllData(Restangular, $scope, 'users');
        }
      }
    }).controller('ArchangelController', function($scope, $location, Restangular, User, Course) {
      $scope.isMobile = isMobile;
      $scope.user = User;
      if (!User.authenticated) {
        return $location.path('/login');
      } else {
        Course.all().then(function(courses) {
          var course, _i, _len, _ref, _results,
            _this = this;
          $scope.courses = courses;
          _ref = $scope.courses;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            course = _ref[_i];
            _results.push(Course.upcomingAssignments(course.id).then(function(upcoming) {
              return course.upcoming = upcoming;
            }));
          }
          return _results;
        });
        $scope.moment = moment;
        if (!isMobile) {
          return getAllData(Restangular, $scope, 'users');
        }
      }
    });
    return angular.bootstrap(document, ['djangoApp']);
  });
});
